name: Build Extension

on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.7'

    - name: Install dependencies
      run: |
        gem install minitest-reporters simplecov

    - name: Run unit tests
      run: |
        cd test
        ruby -I. unit/material_dictionaries_test.rb

    - name: Run tests with coverage
      run: |
        rake coverage

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: test/coverage/
        retention-days: 30

  build-extension:
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install zip
      run: sudo apt-get install -y zip

    # Tag processing (runs on all tag pushes)
    - name: get tag params
      if: startsWith(github.ref, 'refs/tags/')
      uses: olegtarasov/get-tag@v2.1.4
      id: tagName
      with:
        tagRegex: '^(?<type>[a-zA-Z0-9]+)_(?<version>\d+\.\d+\.\d+)$'

    # Version determination
    - name: Determine version number
      id: version
      run: |
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          if [[ "${GITHUB_REF}" == *"feature_"* ]] || [[ "${GITHUB_REF}" == *"dev_"* ]]; then
            echo "0" > major_version.txt
            echo "${GITHUB_RUN_NUMBER}" > minor_version.txt
            echo "major=0" >> $GITHUB_ENV
            echo "minor=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
            echo "build_type=feature" >> $GITHUB_ENV
            echo "tag_type=custom" >> $GITHUB_ENV
          else
            echo "1" > major_version.txt
            echo "${GITHUB_RUN_NUMBER}" > minor_version.txt
            echo "major=1" >> $GITHUB_ENV
            echo "minor=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
            echo "build_type=release" >> $GITHUB_ENV
            echo "tag_type=release" >> $GITHUB_ENV
          fi
        else
          echo "0" > major_version.txt
          echo "${GITHUB_RUN_NUMBER}" > minor_version.txt
          echo "major=0" >> $GITHUB_ENV
          echo "minor=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
          echo "build_type=nightly" >> $GITHUB_ENV
          echo "tag_type=none" >> $GITHUB_ENV
        fi

    # Normalize version strings
    - name: Normalize version string
      id: norm_version
      run: |
        RAW_VERSION="${GITHUB_REF_NAME#release_}"
        echo "raw_version=$RAW_VERSION" >> $GITHUB_ENV
        SAFE_VERSION="${RAW_VERSION//./_}"
        echo "safe_version=$SAFE_VERSION" >> $GITHUB_ENV

    - name: Zip 'src' folder
      run: |
        cd src
        if [ "${{ env.tag_type }}" = "release" ]; then
          zip -r ../skpelectrics-${{ env.safe_version }}.rbz ./*
        elif [ "${{ env.tag_type }}" = "custom" ]; then
          zip -r ../skpelectrics-${{ github.ref_name }}.rbz ./*
        else
          zip -r ../skpelectrics-nightly-${{ github.run_number }}.rbz ./*
        fi

    # Always upload as artifact
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.tag_type == 'release' && format('skpelectrics-{0}.rbz', env.safe_version) ||
               env.tag_type == 'custom' && format('skpelectrics-{0}.rbz', github.ref_name) ||
               format('skpelectrics-nightly-{0}.rbz', github.run_number) }}
        path: ${{ env.tag_type == 'release' && format('skpelectrics-{0}.rbz', env.safe_version) ||
               env.tag_type == 'custom' && format('skpelectrics-{0}.rbz', github.ref_name) ||
               format('skpelectrics-nightly-{0}.rbz', github.run_number) }}

    # Release creation (only for release tags)
    - name: Create Release
      if: env.tag_type == 'release'
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: Release ${{ env.raw_version }}
        tag_name: ${{ github.ref_name }}
        body: |
          Release ${{ env.raw_version }}
          Auto-generated release for ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Upload to release (only for release tags)
    - name: Upload Release Asset
      if: env.tag_type == 'release'
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: skpelectrics-${{ env.safe_version }}.rbz
        asset_name: skpelectrics-${{ env.safe_version }}.rbz
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Feature/dev tag upload (not a full release)
    - name: Upload Tag Asset
      if: env.tag_type == 'custom'
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ format('https://uploads.github.com/repos/{0}/{1}/releases/tags/{2}/assets', github.repository_owner, github.repository, github.ref_name) }}
        asset_path: skpelectrics-${{ github.ref_name }}.rbz
        asset_name: skpelectrics-${{ github.ref_name }}.rbz
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
